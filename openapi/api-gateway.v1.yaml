openapi: 3.1.0
info:
  title: LokanOS API Gateway
  version: 1.0.0-dev
  description: >-
    Initial skeleton for the LokanOS API gateway. All endpoints require mutual TLS
    authentication using certificates issued by the Lokan development CA.
servers:
  - url: https://localhost:8443
    description: Development gateway
security:
  - mtls: []
tags:
  - name: Health
    description: Basic service health checks.
  - name: Info
    description: Metadata about the API gateway deployment.
  - name: Devices
    description: Proxy surface for the device registry.
  - name: Commissioning
    description: BLE-assisted device onboarding and credential issuance.
components:
  securitySchemes:
    mtls:
      type: mutualTLS
  responses:
    ErrorResponse:
      description: Structured JSON error payload.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                required: [code, message]
            required: [error]
    BleHandshakeRequest:
      type: object
      properties:
        qrPayload:
          type: string
          description: Payload encoded in the commissioning QR label (must start with `LOKAN:`).
        deviceId:
          type: string
        nonce:
          type: string
        metadata:
          type: object
          additionalProperties: true
          nullable: true
      required: [qrPayload, deviceId, nonce]
    BleHandshakeResponse:
      type: object
      properties:
        session:
          type: string
        sharedKey:
          type: string
      required: [session, sharedKey]
    VerifyRequest:
      type: object
      properties:
        deviceId:
          type: string
        signature:
          type: string
          description: Base64 signature covering the commissioning challenge.
        session:
          type: string
          nullable: true
      required: [deviceId, signature]
    VerifyResponse:
      type: object
      properties:
        accepted:
          type: boolean
        reason:
          type: string
          nullable: true
      required: [accepted]
    CsrRequest:
      type: object
      properties:
        deviceId:
          type: string
        csr:
          type: string
          description: Base64-encoded DER CSR payload.
        nonce:
          type: string
          nullable: true
      required: [deviceId, csr]
    CsrResponse:
      type: object
      properties:
        certificate:
          type: string
          description: Base64-encoded device certificate.
        caIdentifier:
          type: string
          nullable: true
      required: [certificate]
paths:
  /v1/health:
    get:
      tags: [Health]
      summary: Gateway health probe.
      responses:
        '200':
          description: Service is healthy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  service:
                    type: string
                required: [status, service]
        default:
          $ref: '#/components/responses/ErrorResponse'
  /v1/info:
    get:
      tags: [Info]
      summary: Gateway metadata.
      responses:
        '200':
          description: Informational details about the gateway build.
          content:
            application/json:
              schema:
                type: object
                properties:
                  service:
                    type: string
                  version:
                    type: string
                required: [service, version]
        default:
          $ref: '#/components/responses/ErrorResponse'
  /v1/devices:
    get:
      tags: [Devices]
      summary: List registered devices.
      description: >-
        Proxies the request to the device registry service and returns the JSON
        payload. Rate limiting and RBAC policies are enforced before proxying.
      responses:
        '200':
          description: Device records proxied from the registry.
          content:
            application/json:
              schema:
                type: object
                properties:
                  requested_by:
                    type: object
                    properties:
                      subject:
                        type: string
                      role:
                        type: string
                    required: [subject, role]
                  devices:
                    description: JSON payload returned by the device registry.
                    nullable: true
                    type: object
                    additionalProperties: true
                required: [requested_by, devices]
        '429':
          $ref: '#/components/responses/ErrorResponse'
        '403':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      tags: [Devices]
      summary: Placeholder for future device provisioning APIs.
      description: Not yet implemented.
      responses:
        '501':
          description: Not implemented.
          $ref: '#/components/responses/ErrorResponse'
  /v1/commissioning/ble/handshake:
    post:
      tags: [Commissioning]
      summary: Initiate the BLE commissioning handshake.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BleHandshakeRequest'
      responses:
        '200':
          description: Session token and shared key negotiated with the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BleHandshakeResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /v1/commissioning/csr:
    post:
      tags: [Commissioning]
      summary: Submit a device CSR for signing.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrRequest'
      responses:
        '200':
          description: Returns the signed device certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsrResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /v1/commissioning/verify:
    post:
      tags: [Commissioning]
      summary: Verify the device applied the commissioned credentials.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyRequest'
      responses:
        '200':
          description: Verification outcome.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
